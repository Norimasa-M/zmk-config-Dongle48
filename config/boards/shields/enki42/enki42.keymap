/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <220>; };

&mt { quick_tap_ms = <220>; };

/ {
    macros {
        numdot: numdot {
            label = "ZM_numdot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        grtsgn: grtsgn {
            label = "ZM_grtsgn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        Base_Layer {
            // ------------------------------------------------------------------------------------------------
            //| LGUI/] |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | RGUI/[ | 
            //| CTRL/` |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | CTRL/' |
            //| LALT/\ |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT/- |
            //                             | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&lt 3 ESCAPE      &kp Q         &kp W         &kp E         &kp R        &kp T        &kp Y  &kp U                &kp I      &kp O     &kp P        &kp BACKSPACE
&kp TAB           &kp A         &kp S         &kp D         &kp F        &kp G        &kp H  &kp J                &kp K      &kp L     &kp MINUS    &mt RIGHT_CONTROL RETURN
&kp LEFT_SHIFT    &kp Z         &kp X         &kp C         &kp V        &kp B        &kp N  &kp M                &kp COMMA  &kp DOT   &lt 2 SLASH  &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp LEFT_GUI  &lt 1 C_MENU  &kp LEFT_ALT  &lt 2 LANG2  &kp SPACE    &mo 1  &mt RIGHT_ALT LANG1  &kp LEFT   &kp DOWN  &kp UP       &kp RIGHT
            >;
        };

        Icon_Layer {
            // -----------------------------------------------------------------------------------------
            //|LGUI/CAPS |  *  |  7 |  8  |  9  |  +  |    |  !  |  @  |  #  |  $  |  %  | RGUI/F1 |
            //|CTRL/MENU |  /  |  4 |  5  |  6  |  -  |    |  ^  |  &  |  *  |  (  |  )  | CTRL/F2 |
            //|  LALT/=  |  0  |  1 |  4  |  3  |  .  |    |  ls |  F4 |  F5 |  F6 |  F7 | RALT/F3 |
            //                      | ADJ | ___ | ___ |    | ___ | ___ | ADJ |

            bindings = <
&none            &kp N1    &kp N2    &kp N3     &kp N4  &kp N5     &kp N6     &kp N7    &kp N8    &kp N9         &kp N0       &kp DEL
&mt LCTRL K_APP  &none     &kp UP    &none      &none   &none      &kp CARET  &kp BSLH  &kp SEMI  &kp COLON      &kp AT       &kp LBKT
&kp LEFT_SHIFT   &kp LEFT  &kp DOWN  &kp RIGHT  &none   &numdot    &trans     &trans    &trans    &trans         &kp UNDER    &kp RBKT
&trans           &trans    &trans    &none      &trans  &trans     &trans     &trans    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END
            >;
        };

        Num_Layer {
            // -----------------------------------------------------------------------------------------
            //| BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR |
            //| BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //|pwrOFF|NUMLK|     |     |     |     |   |     |     |     |     |     |      |
            //                   |     |     |     |   |     |     |     |

            bindings = <
&kp KP_NUMLOCK  &none            &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS    &kp MINUS        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS  &bootloader
&kp CAPSLOCK    &kp DOT          &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS     &kp PLUS         &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS   &none
&none           &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &none        &none            &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans     &none
&trans          &none            &trans           &kp DOT          &none            &trans       &kp KP_NUMBER_0  &kp KP_NUMBER_0  &kp N0           &kp DOT          &none      &trans
            >;
        };

        Fn_Layer {
            bindings = <
&none       &kp F1        &kp F2        &kp F3        &kp F4  &kp F5     &kp F6        &none         &none         &none         &none         &bootloader
&none       &kp F6        &kp F7        &kp F8        &kp F9  &kp F10    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&none       &kp F11       &kp F12       &none         &none   &none      &none         &none         &none         &none         &none         &ext_power EP_OFF
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none   &trans     &trans        &none         &trans        &trans        &none         &trans
            >;
        };
    };
};
