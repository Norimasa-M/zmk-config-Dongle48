/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "unicode.h"
#include "keycode_japanese.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <220>; };

&mt { quick_tap_ms = <220>; };

/ {
    macros {
        numdot: numdot {
            label = "ZM_numdot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        grtsgn: grtsgn {
            label = "ZM_grtsgn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        DefaultLayer {
            bindings = <
&lt 3 ESCAPE      &kp Q         &kp W        &kp E         &kp R        &kp T        &kp Y        &kp U               &kp I           &kp O           &kp P         &kp BACKSPACE
&kp LEFT_CONTROL  &kp A         &kp S        &kp D         &kp F        &kp G        &kp H        &kp J               &kp K           &kp L           &kp MINUS     &mt RIGHT_CONTROL RETURN
&kp LEFT_SHIFT    &kp Z         &kp X        &kp C         &kp V        &kp B        &kp N        &kp M               &kp COMMA       &kp DOT         &kp SLASH     &kp RIGHT_SHIFT
&kp TAB           &kp LEFT_GUI  &lt 2 LANG2  &kp LEFT_ALT  &lt 1 LANG2  &kp SPACE    &lt 1 LANG1  &mt RIGHT_ALT LANG1 &kp LEFT_ARROW  &kp DOWN        &kp UP        &kp RIGHT
            >;
        };

        NumIconLayer {
            bindings = <
&kp KP_NUMLOCK  &trans           &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS    &kp N7  &kp N8      &kp N9  &kp JP_CARET  &kp JP_YEN  &kp DEL
&kp KP_ENTER    &kp KP_DOT       &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS     &kp N4  &kp N5      &kp N6  &kp JP_PIPE   &kp LBKT    &kp RBKT
&kp LEFT_SHIFT  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &numdot         &kp N1  &kp N2      &kp N3  &kp N0        &kp SLASH   &kp NUHS
&trans          &trans           &trans           &kp KP_DOT       &trans           &trans          &trans  &kp KP_DOT  &trans  &kp SEMI      &kp SQT     &kp JP_UNDER
            >;
        };

        ExtraLayer {
            bindings = <
&kp BSPC   &kp Y  &kp U  &kp I      &kp O    &kp P           &none       &none         &none         &none     &none      &kp DEL
&kp LCTRL  &kp H  &kp J  &kp K      &kp L    &kp RET         &none       &none         &none         &none     &none      &none
&kp LSHFT  &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH        &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &none     &kp PG_UP  &none
&none      &none  &none  &none      &none    &kp K_COFFEE    &trans      &none         &none         &kp HOME  &kp PG_DN  &kp END
            >;
        };

        FnLayer {
            bindings = <
&none       &kp F1        &kp F2        &kp F3        &kp F4  &kp F5     &none         &none         &none         &none         &none         &bootloader
&none       &kp F6        &kp F7        &kp F8        &kp F9  &kp F10    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&none       &kp F11       &kp F12       &kp F13       &none   &none      &none         &none         &none         &none         &none         &ext_power EP_OFF
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none   &trans     &trans        &none         &trans        &trans        &none         &trans
            >;
        };
    };
};
